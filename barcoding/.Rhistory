x1$"_1_" <- rowSums(x1[,grep("_1_", names(x1))])
x1$"_2_" <- rowSums(x1[,grep("_2_", names(x1))])
x1$"_3_" <- rowSums(x1[,grep("_3_", names(x1))])
x1$"_4_" <- rowSums(x1[,grep("_4_", names(x1))])
x1$"_5_" <- rowSums(x1[,grep("_5_", names(x1))])
x1$"_6_" <- rowSums(x1[,grep("_6_", names(x1))])
x1$"_7_" <- rowSums(x1[,grep("_7_", names(x1))])
x1$"_9_" <- rowSums(x1[,grep("_9_", names(x1))])
x1$"_8_" <- rowSums(x1[,grep("_8_", names(x1))])
x1$"_10_" <- rowSums(x1[,grep("_10_", names(x1))])
x1$"_11_" <- rowSums(x1[,grep("_11_", names(x1))])
x1$"_12_" <- rowSums(x1[,grep("_12_", names(x1))])
x1$"_13_" <- rowSums(x1[,grep("_13_", names(x1))])
x1$"_14_" <- rowSums(x1[,grep("_14_", names(x1))])
rownames(x1)<- x1[,1]
x1<-x1[,-c(1:169)]
View(x1)
View(AE13A.16_all.filtered)
x3<- x1
x3<-t(apply(x3, 1, function(x) replace(x, x== max(x), 1000000)))
x3<-t(apply(x3, 1, function(x) replace(x, x!= 1000000, 0)))
x3<-t(apply(x3, 1, function(x) replace(x, x== 1000000, 1)))
x3<-as.data.frame(x3)
View(x3)
AE13A.4_plate.index.combined <- read.delim("~/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE13 kinetic/AE13A filtering for quartile script/AE13A 4_plate index combined.txt")
View(AE13A.4_plate.index.combined)
# Import the file from data filtered for quantile script in which plate indices are combined
x1<- AE13A.4_plate.index.combined
x1[,1]<-NULL
x1<- merge(x3,x1, all=TRUE)
x1[is.na(x1)] <- 1
View(x1)
H1 <- x1[,grep("_1_", colnames(x1))]
H1<- cbind(x1[,1],H1)
dimnames(H1)[[2]][1]<- "tag"
H2 <- x1[,grep("_2_", colnames(x1))]
H2<- cbind(x1[,1],H2)
dimnames(H2)[[2]][1]<- "tag"
H3 <- x1[,grep("_3_", colnames(x1))]
H3<- cbind(x1[,1],H3)
dimnames(H3)[[2]][1]<- "tag"
H4 <- x1[,grep("_4_", colnames(x1))]
H4<- cbind(x1[,1],H4)
dimnames(H4)[[2]][1]<- "tag"
H5 <- x1[,grep("_5_", colnames(x1))]
H5<- cbind(x1[,1],H5)
dimnames(H5)[[2]][1]<- "tag"
H6 <- x1[,grep("_6_", colnames(x1))]
H6<- cbind(x1[,1],H6)
dimnames(H6)[[2]][1]<- "tag"
H7 <- x1[,grep("_7_", colnames(x1))]
H7<- cbind(x1[,1],H7)
dimnames(H7)[[2]][1]<- "tag"
H8 <- x1[,grep("_8_", colnames(x1))]
H8<- cbind(x1[,1],H8)
dimnames(H8)[[2]][1]<- "tag"
H9 <- x1[,grep("_9_", colnames(x1))]
H9<- cbind(x1[,1],H9)
dimnames(H9)[[2]][1]<- "tag"
H10 <- x1[,grep("_10_", colnames(x1))]
H10<- cbind(x1[,1],H10)
dimnames(H10)[[2]][1]<- "tag"
H11 <- x1[,grep("_11_", colnames(x1))]
H11<- cbind(x1[,1],H11)
dimnames(H11)[[2]][1]<- "tag"
H12 <- x1[,grep("_12_", colnames(x1))]
H12<- cbind(x1[,1],H12)
dimnames(H12)[[2]][1]<- "tag"
H13 <- x1[,grep("_13_", colnames(x1))]
H13<- cbind(x1[,1],H13)
dimnames(H13)[[2]][1]<- "tag"
H14 <- x1[,grep("_14_", colnames(x1))]
H14<- cbind(x1[,1],H14)
dimnames(H14)[[2]][1]<- "tag"
View(H14)
View(x1)
# Import the file from data filtered for quantile script in which plate indices are combined
x1<- AE13A.4_plate.index.combined
x1[,1]<-NULL
x1<- merge(x1,x3, all=TRUE)
x1[is.na(x1)] <- 1
View(x1)
H1 <- x1[,grep("_1_", colnames(x1))]
H1<- cbind(x1[,1],H1)
dimnames(H1)[[2]][1]<- "tag"
H2 <- x1[,grep("_2_", colnames(x1))]
H2<- cbind(x1[,1],H2)
dimnames(H2)[[2]][1]<- "tag"
H3 <- x1[,grep("_3_", colnames(x1))]
H3<- cbind(x1[,1],H3)
dimnames(H3)[[2]][1]<- "tag"
H4 <- x1[,grep("_4_", colnames(x1))]
H4<- cbind(x1[,1],H4)
dimnames(H4)[[2]][1]<- "tag"
H5 <- x1[,grep("_5_", colnames(x1))]
H5<- cbind(x1[,1],H5)
dimnames(H5)[[2]][1]<- "tag"
H6 <- x1[,grep("_6_", colnames(x1))]
H6<- cbind(x1[,1],H6)
dimnames(H6)[[2]][1]<- "tag"
H7 <- x1[,grep("_7_", colnames(x1))]
H7<- cbind(x1[,1],H7)
dimnames(H7)[[2]][1]<- "tag"
H8 <- x1[,grep("_8_", colnames(x1))]
H8<- cbind(x1[,1],H8)
dimnames(H8)[[2]][1]<- "tag"
H9 <- x1[,grep("_9_", colnames(x1))]
H9<- cbind(x1[,1],H9)
dimnames(H9)[[2]][1]<- "tag"
H10 <- x1[,grep("_10_", colnames(x1))]
H10<- cbind(x1[,1],H10)
dimnames(H10)[[2]][1]<- "tag"
H11 <- x1[,grep("_11_", colnames(x1))]
H11<- cbind(x1[,1],H11)
dimnames(H11)[[2]][1]<- "tag"
H12 <- x1[,grep("_12_", colnames(x1))]
H12<- cbind(x1[,1],H12)
dimnames(H12)[[2]][1]<- "tag"
H13 <- x1[,grep("_13_", colnames(x1))]
H13<- cbind(x1[,1],H13)
dimnames(H13)[[2]][1]<- "tag"
H14 <- x1[,grep("_14_", colnames(x1))]
H14<- cbind(x1[,1],H14)
dimnames(H14)[[2]][1]<- "tag"
View(H14)
#make the same heatmap for each element of the list
H1shared = split(H1,H1$"_1_")[['0']]
H1unique = split(H1,H1$"_1_")[['1']]
View(H1shared)
View(H1unique)
H1shared = split(H1,H1$"_1_")[['0']]
H1unique = split(H1,H1$"_1_")[['1']]
H2shared = split(H2,H2$"_2_")[['0']]
H2unique = split(H2,H2$"_2_")[['1']]
H3shared = split(H3,H3$"_3_")[['0']]
H3unique = split(H3,H3$"_3_")[['1']]
H4shared = split(H4,H4$"_4_")[['0']]
H4unique = split(H4,H4$"_4_")[['1']]
H5shared = split(H5,H5$"_5_")[['0']]
H5unique = split(H5,H5$"_5_")[['1']]
H6shared = split(H6,H6$"_6_")[['0']]
H6unique = split(H6,H6$"_6_")[['1']]
H7shared = split(H7,H7$"_7_")[['0']]
H7unique = split(H7,H7$"_7_")[['1']]
H8shared = split(H8,H8$"_8_")[['0']]
H8unique = split(H8,H8$"_8_")[['1']]
H9shared = split(H9,H9$"_9_")[['0']]
H9unique = split(H9,H9$"_9_")[['1']]
H10shared = split(H10,H10$"_10_")[['0']]
H10unique = split(H10,H10$"_10_")[['1']]
H11shared = split(H11,H11$"_11_")[['0']]
H11unique = split(H11,H11$"_11_")[['1']]
H12shared = split(H12,H12$"_12_")[['0']]
H12unique = split(H12,H12$"_12_")[['1']]
H13shared = split(H13,H13$"_13_")[['0']]
H13unique = split(H13,H13$"_13_")[['1']]
H14shared = split(H14,H14$"_14_")[['0']]
H14unique = split(H14,H14$"_14_")[['1']]
#Hshared<-list(H9shared, H10shared, H11shared, H12shared, H13shared, H14shared, H8shared)
Hshared<-list(H1shared, H2shared, H3shared,H4shared, H5shared, H6shared, H7shared, H9shared, H10shared, H11shared, H12shared, H13shared, H14shared, H8shared)
Hshared <- Reduce(function(...) merge(..., by="tag", all=TRUE), Hshared)
Hshared<-Hshared[,!grepl("_1_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_2_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_3_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_4_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_5_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_6_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_7_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_8_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_9_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_10_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_11_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_12_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_13_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_14_$", colnames(Hshared))]
View(H7shared)
View(H8shared)
View(H7)
View(H2)
View(H12)
View(x1)
H1 <- x1[,grep("_1_", colnames(x1))]
H1<- cbind(x1[,1],H1)
dimnames(H1)[[2]][1]<- "tag"
View(H1)
# extract
H1shared = split(H1,H1$"_1_")[['0']]
H1unique = split(H1,H1$"_1_")[['1']]
View(H1unique)
H2shared = split(H2,H2$"_2_")[['0']]
H2unique = split(H2,H2$"_2_")[['1']]
H3shared = split(H3,H3$"_3_")[['0']]
H3unique = split(H3,H3$"_3_")[['1']]
H4shared = split(H4,H4$"_4_")[['0']]
H4unique = split(H4,H4$"_4_")[['1']]
H5shared = split(H5,H5$"_5_")[['0']]
H5unique = split(H5,H5$"_5_")[['1']]
H6shared = split(H6,H6$"_6_")[['0']]
H6unique = split(H6,H6$"_6_")[['1']]
H7shared = split(H7,H7$"_7_")[['0']]
H7unique = split(H7,H7$"_7_")[['1']]
H8shared = split(H8,H8$"_8_")[['0']]
H8unique = split(H8,H8$"_8_")[['1']]
H9shared = split(H9,H9$"_9_")[['0']]
H9unique = split(H9,H9$"_9_")[['1']]
H10shared = split(H10,H10$"_10_")[['0']]
H10unique = split(H10,H10$"_10_")[['1']]
H11shared = split(H11,H11$"_11_")[['0']]
H11unique = split(H11,H11$"_11_")[['1']]
H12shared = split(H12,H12$"_12_")[['0']]
H12unique = split(H12,H12$"_12_")[['1']]
H13shared = split(H13,H13$"_13_")[['0']]
H13unique = split(H13,H13$"_13_")[['1']]
H14shared = split(H14,H14$"_14_")[['0']]
H14unique = split(H14,H14$"_14_")[['1']]
View(H6unique)
#Hshared<-list(H9shared, H10shared, H11shared, H12shared, H13shared, H14shared, H8shared)
Hshared<-list(H1shared, H2shared, H3shared,H4shared, H5shared, H6shared, H7shared, H9shared, H10shared, H11shared, H12shared, H13shared, H14shared, H8shared)
Hshared <- Reduce(function(...) merge(..., by="tag", all=TRUE), Hshared)
Hshared<-list(H9shared, H10shared, H11shared, H12shared, H13shared, H14shared, H8shared)
Hshared <- Reduce(function(...) merge(..., by="tag", all=TRUE), Hshared)
x1<-read.table("/Users/Almut/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 16_all filtered.txt", sep="\t", header=TRUE)
x1<-read.table("/Users/Almut/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 16_all filtered.txt", sep="\t", header=TRUE)
x1$"_1_" <- rowSums(x1[,grep("_1_", names(x1))])
x1$"_2_" <- rowSums(x1[,grep("_2_", names(x1))])
x1$"_3_" <- rowSums(x1[,grep("_3_", names(x1))])
x1$"_4_" <- rowSums(x1[,grep("_4_", names(x1))])
x1$"_5_" <- rowSums(x1[,grep("_5_", names(x1))])
x1$"_6_" <- rowSums(x1[,grep("_6_", names(x1))])
x1$"_7_" <- rowSums(x1[,grep("_7_", names(x1))])
x1$"_8_" <- rowSums(x1[,grep("_8_", names(x1))])
x1$"_9_" <- rowSums(x1[,grep("_9_", names(x1))])
x1$"_10_" <- rowSums(x1[,grep("_10_", names(x1))])
rownames(x1)<- x1[,1]
x1<-x1[,-c(1:77)]
x3<- x1
x3<-t(apply(x3, 1, function(x) replace(x, x== max(x), 1000000)))
x3<-t(apply(x3, 1, function(x) replace(x, x!= 1000000, 0)))
x3<-t(apply(x3, 1, function(x) replace(x, x== 1000000, 1)))
x3<-as.data.frame(x3)
x3 <- cbind(tag = rownames(x3), x3)
rownames(x3)<-NULL
AE03High.4_plate.index.combined.txt <- read.delim("~/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 4_plate index combined.txt.txt")
View(AE03High.4_plate.index.combined.txt)
x1<- AE03High.4_plate.index.combined.txt
x1[,1]<-NULL
x1<- merge(x3,x1, all=TRUE)
x1[is.na(x1)] <- 1
H1 <- x1[,grep("_1_", colnames(x1))]
H1<- cbind(x1[,1],H1)
dimnames(H1)[[2]][1]<- "tag"
H2 <- x1[,grep("_2_", colnames(x1))]
H2<- cbind(x1[,1],H2)
dimnames(H2)[[2]][1]<- "tag"
H3 <- x1[,grep("_3_", colnames(x1))]
H3<- cbind(x1[,1],H3)
dimnames(H3)[[2]][1]<- "tag"
H4 <- x1[,grep("_4_", colnames(x1))]
H4<- cbind(x1[,1],H4)
dimnames(H4)[[2]][1]<- "tag"
H5 <- x1[,grep("_5_", colnames(x1))]
H5<- cbind(x1[,1],H5)
dimnames(H5)[[2]][1]<- "tag"
H6 <- x1[,grep("_6_", colnames(x1))]
H6<- cbind(x1[,1],H6)
dimnames(H6)[[2]][1]<- "tag"
H7 <- x1[,grep("_7_", colnames(x1))]
H7<- cbind(x1[,1],H7)
dimnames(H7)[[2]][1]<- "tag"
H8 <- x1[,grep("_8_", colnames(x1))]
H8<- cbind(x1[,1],H8)
dimnames(H8)[[2]][1]<- "tag"
H9 <- x1[,grep("_9_", colnames(x1))]
H9<- cbind(x1[,1],H9)
dimnames(H9)[[2]][1]<- "tag"
H10 <- x1[,grep("_10_", colnames(x1))]
H10<- cbind(x1[,1],H10)
dimnames(H10)[[2]][1]<- "tag"
View(H1)
H1shared = split(H1,H1$"_1_")[['0']]
H1unique = split(H1,H1$"_1_")[['1']]
H2shared = split(H2,H2$"_2_")[['0']]
H2unique = split(H2,H2$"_2_")[['1']]
H3shared = split(H3,H3$"_3_")[['0']]
H3unique = split(H3,H3$"_3_")[['1']]
H4shared = split(H4,H4$"_4_")[['0']]
H4unique = split(H4,H4$"_4_")[['1']]
H5shared = split(H5,H5$"_5_")[['0']]
H5unique = split(H5,H5$"_5_")[['1']]
H6shared = split(H6,H6$"_6_")[['0']]
H6unique = split(H6,H6$"_6_")[['1']]
H7shared = split(H7,H7$"_7_")[['0']]
H7unique = split(H7,H7$"_7_")[['1']]
H8shared = split(H8,H8$"_8_")[['0']]
H8unique = split(H8,H8$"_8_")[['1']]
H9shared = split(H9,H9$"_9_")[['0']]
H9unique = split(H9,H9$"_9_")[['1']]
H10shared = split(H10,H10$"_10_")[['0']]
H10unique = split(H10,H10$"_10_")[['1']]
Hshared<-list(H1shared,H2shared,H3shared,H4shared,H5shared,H6shared,H7shared,H8shared, H9shared, H10shared)
Hshared <- Reduce(function(...) merge(..., by="tag", all=TRUE), Hshared)
Hshared<-Hshared[,!grepl("_1_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_2_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_3_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_4_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_5_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_6_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_7_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_8_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_9_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_10_$", colnames(Hshared))]
# Get qunatile data
#Can include zero or not
#Hshared[is.na(Hshared)] <- 0
Hshared[Hshared == 0] <- NA
quantile(unlist(Hshared),probs=c(0,5,90,95,98,100)/100, na.rm=TRUE)
View(H8unique)
# Import the data filtered for quantile script
x1<-read.table("/Users/Almut/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 16_all filtered.txt", sep="\t", header=TRUE)
x1$"_1_" <- rowSums(x1[,grep("_1_", names(x1))])
x1$"_2_" <- rowSums(x1[,grep("_2_", names(x1))])
x1$"_3_" <- rowSums(x1[,grep("_3_", names(x1))])
x1$"_4_" <- rowSums(x1[,grep("_4_", names(x1))])
x1$"_5_" <- rowSums(x1[,grep("_5_", names(x1))])
x1$"_6_" <- rowSums(x1[,grep("_6_", names(x1))])
x1$"_7_" <- rowSums(x1[,grep("_7_", names(x1))])
x1$"_8_" <- rowSums(x1[,grep("_8_", names(x1))])
x1$"_9_" <- rowSums(x1[,grep("_9_", names(x1))])
x1$"_10_" <- rowSums(x1[,grep("_10_", names(x1))])
# remove all other columns
rownames(x1)<- x1[,1]
x1<-x1[,-c(1:77)]
# binarize on presence absence of reads for a sepcific barcode in a specific mouse
x3<- x1
x3<-t(apply(x3, 1, function(x) replace(x, x== max(x), 1000000)))
# binarize on presence absence of reads for a sepcific barcode in a specific mouse
x3<- x1
View(x3)
x3<-t(apply(x3, 1, function(x) replace(x, x== max(x), 1000000)))
View(x3)
x3<-t(apply(x3, 1, function(x) replace(x, x!= 1000000, 0)))
# binarize on presence absence of reads for a sepcific barcode in a specific mouse
x3<- x1
View(x3)
x3<-t(apply(x3, 1, function(x) replace(x, x== max(x), 1000000)))
View(x3)
x3<-t(apply(x3, 1, function(x) replace(x, x!= 1000000, 0)))
x3<-t(apply(x3, 1, function(x) replace(x, x== 1000000, 1)))
x3<-as.data.frame(x3)
x3 <- cbind(tag = rownames(x3), x3)
rownames(x3)<-NULL
View(x3)
x1<-read.table("/Users/Almut/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 16_all filtered.txt", sep="\t", header=TRUE)
# add column with merged reads by mouse
x1$"_1_" <- rowSums(x1[,grep("_1_", names(x1))])
x1$"_2_" <- rowSums(x1[,grep("_2_", names(x1))])
x1$"_3_" <- rowSums(x1[,grep("_3_", names(x1))])
x1$"_4_" <- rowSums(x1[,grep("_4_", names(x1))])
x1$"_5_" <- rowSums(x1[,grep("_5_", names(x1))])
x1$"_6_" <- rowSums(x1[,grep("_6_", names(x1))])
x1$"_7_" <- rowSums(x1[,grep("_7_", names(x1))])
x1$"_8_" <- rowSums(x1[,grep("_8_", names(x1))])
x1$"_9_" <- rowSums(x1[,grep("_9_", names(x1))])
x1$"_10_" <- rowSums(x1[,grep("_10_", names(x1))])
# remove all other columns
rownames(x1)<- x1[,1]
x1<-x1[,-c(1:77)]
x3<- x1
x3<-t(apply(x3, 1, function(x) replace(x, x== max(x), 1000000)))
x3<-t(apply(x3, 1, function(x) replace(x, x!= 1000000, 0)))
x3<-t(apply(x3, 1, function(x) replace(x, x== 1000000, 1)))
x3<-as.data.frame(x3)
x3 <- cbind(tag = rownames(x3), x3)
rownames(x3)<-NULL
AE03High.4_plate.index.combined.txt <- read.delim("~/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 4_plate index combined.txt.txt")
View(AE03High.4_plate.index.combined.txt)
x1<- AE03High.4_plate.index.combined.txt
x1[,1]<-NULL
x1<- merge(x1,x3, all=TRUE)
x1[is.na(x1)] <- 1
# Extract all data belonging to one mouse
H1 <- x1[,grep("_1_", colnames(x1))]
H1<- cbind(x1[,1],H1)
dimnames(H1)[[2]][1]<- "tag"
H2 <- x1[,grep("_2_", colnames(x1))]
H2<- cbind(x1[,1],H2)
dimnames(H2)[[2]][1]<- "tag"
H3 <- x1[,grep("_3_", colnames(x1))]
H3<- cbind(x1[,1],H3)
dimnames(H3)[[2]][1]<- "tag"
H4 <- x1[,grep("_4_", colnames(x1))]
H4<- cbind(x1[,1],H4)
dimnames(H4)[[2]][1]<- "tag"
H5 <- x1[,grep("_5_", colnames(x1))]
H5<- cbind(x1[,1],H5)
dimnames(H5)[[2]][1]<- "tag"
H6 <- x1[,grep("_6_", colnames(x1))]
H6<- cbind(x1[,1],H6)
dimnames(H6)[[2]][1]<- "tag"
H7 <- x1[,grep("_7_", colnames(x1))]
H7<- cbind(x1[,1],H7)
dimnames(H7)[[2]][1]<- "tag"
H8 <- x1[,grep("_8_", colnames(x1))]
H8<- cbind(x1[,1],H8)
dimnames(H8)[[2]][1]<- "tag"
H9 <- x1[,grep("_9_", colnames(x1))]
H9<- cbind(x1[,1],H9)
dimnames(H9)[[2]][1]<- "tag"
H10 <- x1[,grep("_10_", colnames(x1))]
H10<- cbind(x1[,1],H10)
dimnames(H10)[[2]][1]<- "tag"
H1shared = split(H1,H1$"_1_")[['0']]
H1unique = split(H1,H1$"_1_")[['1']]
H2shared = split(H2,H2$"_2_")[['0']]
H2unique = split(H2,H2$"_2_")[['1']]
H3shared = split(H3,H3$"_3_")[['0']]
H3unique = split(H3,H3$"_3_")[['1']]
H4shared = split(H4,H4$"_4_")[['0']]
H4unique = split(H4,H4$"_4_")[['1']]
H5shared = split(H5,H5$"_5_")[['0']]
H5unique = split(H5,H5$"_5_")[['1']]
H6shared = split(H6,H6$"_6_")[['0']]
H6unique = split(H6,H6$"_6_")[['1']]
H7shared = split(H7,H7$"_7_")[['0']]
H7unique = split(H7,H7$"_7_")[['1']]
H8shared = split(H8,H8$"_8_")[['0']]
H8unique = split(H8,H8$"_8_")[['1']]
H9shared = split(H9,H9$"_9_")[['0']]
H9unique = split(H9,H9$"_9_")[['1']]
H10shared = split(H10,H10$"_10_")[['0']]
H10unique = split(H10,H10$"_10_")[['1']]
# Merge all samples where barcodes have noise level ("shared")
Hshared<-list(H1shared, H2shared, H3shared, H4shared, H5shared, H6shared, H7shared, H8shared, H9shared, H10shared)
Hshared <- Reduce(function(...) merge(..., by="tag", all=TRUE), Hshared)
#Hshared<-Hshared[,-1]
View(Hshared)
Hshared<-Hshared[,!grepl("_1_$", colnames(Hshared))]
View(Hshared)
Hshared<-Hshared[,!grepl("_2_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_3_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_4_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_5_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_6_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_7_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_8_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_9_$", colnames(Hshared))]
Hshared<-Hshared[,!grepl("_10_$", colnames(Hshared))]
Hshared[Hshared == 0] <- NA
quantile(unlist(Hshared),probs=c(0,5,90,95,98,100)/100, na.rm=TRUE)
d <- melt(Hshared, id.vars="tag") # convert from wide to long format
d<-as.data.frame(d)
d2 <- cbind( d, ldply(strsplit(as.character(d[,2]), "_"), identity) ) # split the identifier column
#d2 <- d2[,-8]#delete the empty column due to __
names(d2) <- c("tag","id","var", "exp","prog","mouse","type", "rep")  # rename all columns
library(plyr)
d<-as.data.frame(d)
d2 <- cbind( d, ldply(strsplit(as.character(d[,2]), "_"), identity) ) # split the identifier column
#d2 <- d2[,-8]#delete the empty column due to __
names(d2) <- c("tag","id","var", "exp","prog","mouse","type", "rep")  # rename all columns
#delete the zeros
d3<- d2[which(d2$var>0),]
plot<-ggplot(d3,aes(x = var)) +
facet_wrap(~mouse,scales = "free_x") +
geom_histogram()+
scale_y_continuous(trans = 'log10')+
scale_x_continuous(trans = 'log10')+
theme_grey(base_size = 22)
print(plot)
x1<-read.table("/Users/Almut/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03High 16_all filtered.txt", sep="\t", header=TRUE)
AE03.High.3_withnames_without_nohits <- read.delim("~/Dropbox/Institut_Curie/Desktop/Sequencing_data_new_library/Analysis AE3:AE5:AE4 before standardizing protocol for new library/Analysis AE3 High/AE03High filtering/AE03 High 3_withnames_without_nohits.txt")
View(AE03.High.3_withnames_without_nohits)
# Import data after first filtering steps outside of R
M<- AE03.High.3_withnames_without_nohits
m <- melt(M, id.vars="tag")
m2 <- cbind( m, ldply(strsplit(as.character(m[,2]), "_"), identity) ) # split the identifier column
m2 <- m2[,-8] # delete the empty column due to __
names(m2) <- c("tag","id","var", "exp","prog","mouse","type", "rep", "plate_index", "sample_index")  # rename all columns
View(m2)
m3<- data.table(m2)
m4<- m3[ , .(Totalreads = sum(var)), by = .(exp, prog, mouse, type, rep, sample_index, tag), drop=FALSE]
## And get it back into the wide format in order to use standard analysis script
# sample_index column can be deleted now
m4[,6]<- NULL
m4$id<-paste(m4$exp,m4$prog,m4$mouse,m4$type, m4$rep, m4$sample_index, sep="_")
m5 <- m4[,-c(1,2,3,4,5)]
m5 <- reshape(m5,direction="wide", timevar="id", idvar="tag" )
View(m5)
#heatmap function
mydistM = function(z) dist(z,'manhattan')
#mydistK = function(z) as.dist(cor(z,method='pearson'))
myhclu = function(d) hclust(d,method='complete')
# make sure that your input is a matrix, else it won't work
library("gplots")
#heatmap with adjustable scale
d <- asinh(m5[,-1]/1000)# the data to be plotted without the tag column transformed as asin values so that zero=zero
d <- d[which(rowSums(d)>0),] # exclude from table the barcodes with no values (should not be any, should there?)
pairs.breaks <- seq(round(min(d)), round(max(d))+1, by=0.5) # usually by 0,5
mycol <- colorpanel(n=length(pairs.breaks)-1,low="black",mid="green",high="red")
mymar <- c(10, 4) + 0.1
myhm = function(y) heatmap.2(y, dendrogram="col", distfun=mydistM, hclustfun=myhclu,scale="none", breaks=pairs.breaks,
col=mycol, margins=mymar,
labCol = NULL, cexCol=0.9, density.info="none", trace="none",
key = TRUE, keysize = 0.5, key.title=NA, # no title
key.xlab=NA)  # no xlabel of color key
m <-as.matrix(d)
x <- myhm(m)
m5<-as.data.frame(m5)
rownames(m5) <- m5[,1]
data <- m5[,-1]
data <- data[-1295,]
norm.data <- apply(data,2, function(x) (x/sum(x))*100000)
m <- melt(M, id.vars="tag")
